(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{495:function(e,s,t){"use strict";t.r(s);var n=t(2),o=Object(n.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"understanding-asynchronous-code-and-api-s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#understanding-asynchronous-code-and-api-s"}},[e._v("#")]),e._v(" UnderStanding Asynchronous Code, and API's")]),e._v(" "),t("p",[t("strong",[e._v("1.")]),e._v(" What is the difference between "),t("code",[e._v("asynchronous")]),e._v(" code and "),t("code",[e._v("synchronous")]),e._v(" code?")]),e._v(" "),t("p",[e._v("Synchronous code returns a value as soon as the function is called. Asynchronous code does not immediately return a value from a function when it is called.")]),e._v(" "),t("p",[t("strong",[e._v("2.")]),e._v(" What is an event listener?")]),e._v(" "),t("p",[e._v("An event listener is a part of code that waits for an event to happen, like a mouse click or an array update.")]),e._v(" "),t("p",[t("strong",[e._v("3.")]),e._v(" What does the "),t("code",[e._v("O")]),e._v(" represent in the "),t("code",[e._v("SOLID")]),e._v(" principles?")]),e._v(" "),t("p",[e._v("Open/ closed principle.")]),e._v(" "),t("p",[t("strong",[e._v("4.")]),e._v(" What is a callback / higher order function?")]),e._v(" "),t("p",[e._v("It is a function that does not return a value as soon as it is called.")]),e._v(" "),t("p",[t("strong",[e._v("5.")]),e._v(" What is a "),t("code",[e._v("promise")]),e._v("? How do you capture an error from a "),t("code",[e._v("promise")]),e._v("?")]),e._v(" "),t("p",[e._v("A promise is something that will either return data or it wont, use catch to capture a promise error.")]),e._v(" "),t("p",[t("strong",[e._v("6.")]),e._v(" Name three processes used to make requests over "),t("code",[e._v("HTTP")]),e._v("?")]),e._v(" "),t("p",[e._v("Put, Post, and get")]),e._v(" "),t("p",[t("strong",[e._v("7.")]),e._v(" What does the "),t("code",[e._v("API")]),e._v(" acronym stand for?")]),e._v(" "),t("p",[e._v("Application programming interface")]),e._v(" "),t("p",[t("strong",[e._v("8.")]),e._v(" In the "),t("code",[e._v("MVC")]),e._v(" design pattern, who is responsible for making calls to "),t("code",[e._v("APIs")]),e._v("?")]),e._v(" "),t("p",[e._v("The service")]),e._v(" "),t("p",[t("strong",[e._v("9.")]),e._v(" What is the purpose of encapsulation in programming?")]),e._v(" "),t("p",[e._v("Encapsulation reduces sizes of files and makes sure that funstions are only accesed in the intended way.")]),e._v(" "),t("p",[t("strong",[e._v("10.")]),e._v(" What is "),t("code",[e._v("HTTP")]),e._v(" response code for a successful request?")]),e._v(" "),t("p",[e._v("200")]),e._v(" "),t("p",[t("strong",[e._v("11.")]),e._v(" What is a 500 error?")]),e._v(" "),t("p",[e._v("A server was unable to fulfil a request.")])])}),[],!1,null,null,null);s.default=o.exports}}]);
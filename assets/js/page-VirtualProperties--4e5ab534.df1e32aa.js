(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{498:function(e,t,a){"use strict";a.r(t);var r=a(2),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"virtual-properties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#virtual-properties"}},[e._v("#")]),e._v(" Virtual Properties")]),e._v(" "),a("blockquote",[a("p",[e._v("What is a virtual property?")])]),e._v(" "),a("p",[e._v("Virtual properties are fields on an object that do not persist in the database. They can be defined in a model to be used later.")]),e._v(" "),a("blockquote",[a("p",[e._v("When might you use a virtual property?")])]),e._v(" "),a("p",[e._v("One example would be when you need to add 2 values from seperate names in a database for each object in the database.")]),e._v(" "),a("blockquote",[a("p",[e._v("How do you search by a virtual properties value?")])]),e._v(" "),a("p",[e._v("You can use a get method.")])])}),[],!1,null,null,null);t.default=o.exports}}]);
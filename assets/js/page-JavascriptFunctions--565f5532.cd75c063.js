(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{482:function(t,e,n){"use strict";n.r(e);var a=n(2),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"javascript-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript-functions"}},[t._v("#")]),t._v(" Javascript Functions")]),t._v(" "),n("blockquote",[n("p",[t._v("What are the three ways to syntactically write a function? What are the differences in how the function acts (if any)?")])]),t._v(" "),n("p",[t._v("Functions can be written as")]),t._v(" "),n("p",[t._v("function name(parameters){\n//statements\n}\nUsing this function, the definition is hoisted and name() can be used above itself in the code.")]),t._v(" "),n("p",[t._v("let name = function(parameters){\n//statements\n}\nSetting a function without a name prevents the function from being hoisted, and can be used when the variable name is called.")]),t._v(" "),n("p",[t._v("let name = (parameters) =>{\n//statements\n}\nThe arrow function is a shorter way to write a function.")]),t._v(" "),n("blockquote",[n("p",[t._v("What is the difference between Parameters and Arguments?")])]),t._v(" "),n("p",[t._v("Arguments are passed into a function, and parameters are used to define what happens to the argument in a function.")]),t._v(" "),n("blockquote",[n("p",[t._v("What are higher order functions? Can you provide an example?")])]),t._v(" "),n("p",[t._v("Higher order functions are just functions that can accept a function as an argument, or return a function as a result.")]),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"https://connorh14.github.io/js-tests-loops-and-arrays/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Javascript Challenges"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);